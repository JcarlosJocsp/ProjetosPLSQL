







SET SERVEROUTPUT ON;



SELECT * FROM USER_OBJECTS;



UPDATE CAD_CLI_02 SET TOTAL_COMPRA = 1000 WHERE COD_CLI = 20;



ROLLBACK;

COMMIT;



TRUNCATE TABLE CAD_CLI_02;
TRUNCATE TABLE VENDAS;


SELECT * FROM CAD_CLI_02;
SELECT * FROM LOJISTA;
SELECT * FROM PRODUTO;
SELECT * FROM VAUCHER;
SELECT * FROM VENDAS;



/*PARA ELIMINAR O PROJETO DO BANCO DE DADOS */



ALTER TABLE VENDAS
DROP CONSTRAINT FG_RELVAU_P_VAU;

ALTER TABLE VENDAS
DROP CONSTRAINT FG_RELVAU_P_CLI;

ALTER TABLE VENDAS
DROP CONSTRAINT FG_RELVAU_P_LOJ;



DROP TABLE CAD_CLI_02 PURGE;
DROP TABLE LOJISTA    PURGE;
DROP TABLE PRODUTO    PURGE;
DROP TABLE VAUCHER    PURGE;
DROP TABLE VENDAS     PURGE;




DROP SEQUENCE SEQ_CLI;
DROP SEQUENCE SEQ_PRO;
DROP SEQUENCE SEQ_LOJI;


DROP PROCEDURE SP_COD_PRO;
DROP PROCEDURE SP_LOJISTA;
DROP PACKAGE PKG_VOUCHER_DESC;
DROP PROCEDURE SP_CAD_CL;



/*ALTER TABLE CAD_CLI_02 
 DROP COLUMN TOTAL_COMPRA;*/


/*ALTER TABLE RELATORIO_VAUCHER
RENAME TO VENDAS;*/


/* =================================================== TABELAS DO BANCO DE DADOS ==============================================*/


/*TABELA 01*/
CREATE TABLE CAD_CLI_02 (COD_CLI INTEGER CONSTRAINT PK_COD_CLI PRIMARY KEY
                            USING INDEX 
                              (CREATE INDEX IDX_CAD_COD 
                                  ON CAD_CLI_02(COD_CLI)),
                         CPF_CLI INTEGER NOT NULL,
                         NOME_CLI VARCHAR2(500));
                         
                         

ALTER TABLE CAD_CLI_02 
MODIFY CPF_CLI INTEGER UNIQUE;





/*TABELA 02*/
CREATE TABLE PRODUTO (COD_PRO INTEGER CONSTRAINT PK_COD_PRO PRIMARY KEY 
                          USING INDEX 
                            (CREATE INDEX IDX_PRO_COD 
                                 ON PRODUTO (COD_PRO)),
                      NOME_PRODUTO VARCHAR2(300),
                      PRECO_PRO NUMBER);
                      
                      
                      
/*TABELA 03*/                     
CREATE TABLE LOJISTA (COD_LOJ INTEGER CONSTRAINT PK_COD_LOJI PRIMARY KEY,
                      NOME_LOJISTA VARCHAR2(200));
                      



                    


/*TABELA 04*/
CREATE TABLE VAUCHER(COD_VAU VARCHAR2(200) CONSTRAINT PK_COD_VAU PRIMARY KEY,
                     PORCENTAGEM_DES NUMBER(8,2));





/*TABELA 05*/
CREATE TABLE VENDAS (COD_LOJ   INTEGER,
                     COD_CLI   INTEGER,
                     COD_PRO   INTEGER,
                TOTAL_COMPRA   NUMBER(8,2),
                     COD_VAU   VARCHAR2(100));
                     
                     
                               
ALTER TABLE VENDAS
RENAME COLUMN TOTAL_COM TO TOTAL_COMPRA;


ALTER TABLE VENDAS
ADD CONSTRAINT FG_RELVAU_P_VAU FOREIGN KEY (COD_VAU)
REFERENCES VAUCHER (COD_VAU);


ALTER TABLE VENDAS
ADD CONSTRAINT FG_RELVAU_P_CLI FOREIGN KEY (COD_CLI)
REFERENCES CAD_CLI_02 (CPF_CLI);


ALTER TABLE VENDAS
ADD CONSTRAINT FG_RELVAU_P_LOJ FOREIGN KEY (COD_LOJ)
REFERENCES LOJISTA (COD_LOJ);




/*VAUCHER CODIGOS PARA INSERIR NO PARAMETRO DA PROCEDURE
   NHZ3456KFSD 10%
   FHJ9078TGSL 20%
   QWH7856PMNG 30%
   JKB4539FFEW 40%
   LDR7856QPZF 50%
   
INSERT INTO VAUCHER VALUES('NHZ3456KFSD',0.1);
INSERT INTO VAUCHER VALUES('FHJ9078TGSL',0.2);
INSERT INTO VAUCHER VALUES('QWH7856PMNG',0.3);
INSERT INTO VAUCHER VALUES('JKB4539FFEW',0.4);
INSERT INTO VAUCHER VALUES('LDR7856QPZF',0.5);

*/
 
SELECT 500 - 500*0.1 FROM DUAL;
 
   
/* =================================================== SEQUENCE DO BANCO DE DADOS ==============================================*/   
   

CREATE SEQUENCE SEQ_CLI 
MINVALUE 1
MAXVALUE 999999999
START WITH 10 
INCREMENT BY 5
NOCACHE
NOCYCLE
NOORDER;



CREATE SEQUENCE SEQ_PRO 
MINVALUE 1
MAXVALUE 999999999
START WITH 15
INCREMENT BY 2
NOCACHE
NOCYCLE
NOORDER;



CREATE SEQUENCE SEQ_LOJI
MINVALUE 1
MAXVALUE 999999999
START WITH 20 
INCREMENT BY 5
NOCACHE
NOCYCLE
NOORDER;




/* =================================================== PROCEDURES DO BANCO DE DADOS ==============================================*/ 



/*PROCEDURE DE CADASTRO DE CLIENTES*/
CREATE OR REPLACE PROCEDURE SP_CAD_CLI
(P_CPF_CLI   IN CAD_CLI_02.CPF_CLI      %TYPE,
 P_NOME_CLI  IN CAD_CLI_02.NOME_CLI     %TYPE)
IS 
BEGIN
 INSERT INTO CAD_CLI_02 VALUES (SEQ_CLI.NEXTVAL,P_CPF_CLI,INITCAP(P_NOME_CLI));
COMMIT;
DBMS_OUTPUT.PUT_LINE(' CLIENTE CADASTRADO COM SUCESSO !!!');
END;



BEGIN
  SP_CAD_CLI (P_CPF_CLI  => &DIGITE_CPF_CLI,
              P_NOME_CLI => '&DIGITE_NOME_CLI');
END;
              
           

/*PROCEDURE DE CADASTRO DE PRODUTOS*/
CREATE OR REPLACE PROCEDURE SP_COD_PRO 
(P_NOME_PRODUTO IN  PRODUTO.NOME_PRODUTO %TYPE,
 P_PRECO_PRO    IN  PRODUTO.PRECO_PRO    %TYPE)
IS 
BEGIN 
 INSERT INTO PRODUTO VALUES (SEQ_PRO.NEXTVAL,INITCAP(P_NOME_PRODUTO), P_PRECO_PRO);
COMMIT;
 DBMS_OUTPUT.PUT_LINE(' PRODUTO CADASTRADO COM SUCESSO !!!');
END;



BEGIN 
 SP_COD_PRO (P_NOME_PRODUTO  => '&DIGITE_NOME_PRO',
             P_PRECO_PRO     => &DIGITE_PRECO_PRO);
END;




/*PROCEDURE DE CADASTRO DE LOJISTA*/
CREATE OR REPLACE PROCEDURE SP_LOJISTA 
(P_NOME_LOJI IN LOJISTA.NOME_LOJISTA %TYPE)
IS 
BEGIN 
 INSERT INTO LOJISTA VALUES (SEQ_LOJI.NEXTVAL,INITCAP(P_NOME_LOJI));
COMMIT;
DBMS_OUTPUT.PUT_LINE(' LOJISTA CADASTRADO COM SUCESSO !!!');
END;



BEGIN 
 SP_LOJISTA (P_NOME_LOJI  => '&DIGITE_NOME_LOJISTAO');
             
END;







/*CHAMANDO A PROCEDURE PARA FORA DA PACKAGE*/
CREATE OR REPLACE PACKAGE PKG_VOUCHER_DESC IS
 PROCEDURE SP_VENDAS (P_COD_LOJ     IN LOJISTA.COD_LOJ      %TYPE,
                      P_CPF_CLI     IN CAD_CLI_02.CPF_CLI   %TYPE,
                      P_COD_PRO     IN PRODUTO.COD_PRO      %TYPE,
                      P_COD_VAUCHER IN VAUCHER.COD_VAU      %TYPE);
END PKG_VOUCHER_DESC;




/*PROCEDURE DE VENDAS*/
CREATE OR REPLACE PACKAGE BODY PKG_VOUCHER_DESC 
IS
PROCEDURE SP_VENDAS
(P_COD_LOJ     IN LOJISTA.COD_LOJ      %TYPE,
 P_CPF_CLI     IN CAD_CLI_02.CPF_CLI   %TYPE,
 P_COD_PRO     IN PRODUTO.COD_PRO      %TYPE,
 P_COD_VAUCHER IN VAUCHER.COD_VAU      %TYPE)
IS 
/*VARIAVEIS DO INSERTE*/
V_CAP_COD_LOJ   VARCHAR2(500);
V_CAP_CPF_CLI   VARCHAR2(500);
V_CAP_COD_PRO   VARCHAR2(500);
V_CAP_PRECO_PRO VARCHAR2(500);
V_COD_LOJ       INTEGER;
V_CPF_CLI       INTEGER;
V_COD_PRO       INTEGER;
V_PRECO_PRO     INTEGER;

/*VARIAVEIS DOS VAUCHERS*/
V_SQL_DESC_10 VARCHAR2(500);
V_SQL_DESC_20 VARCHAR2(500);
V_SQL_DESC_30 VARCHAR2(500);
V_SQL_DESC_40 VARCHAR2(500);
V_SQL_DESC_50 VARCHAR2(500);
V_DESC_10 NUMBER(8,2);
V_DESC_20 NUMBER(8,2);
V_DESC_30 NUMBER(8,2);
V_DESC_40 NUMBER(8,2);
V_DESC_50 NUMBER(8,2);


/*VARIAVEL DE ERRO*/
V_ERRO EXCEPTION;

BEGIN 
V_CAP_COD_LOJ := 'SELECT COD_LOJ FROM LOJISTA WHERE COD_LOJ = :P_COD_LOJ ';
V_CAP_CPF_CLI := 'SELECT CPF_CLI FROM CAD_CLI_02 WHERE CPF_CLI = :P_CPF_CLI';
V_CAP_COD_PRO := 'SELECT COD_PRO FROM PRODUTO WHERE COD_PRO = :P_COD_PRO';
V_CAP_PRECO_PRO := 'SELECT PRECO_PRO FROM PRODUTO WHERE COD_PRO = :P_COD_PRO';

EXECUTE IMMEDIATE V_CAP_COD_LOJ INTO V_COD_LOJ USING P_COD_LOJ ;
EXECUTE IMMEDIATE V_CAP_CPF_CLI INTO V_CPF_CLI USING P_CPF_CLI;
EXECUTE IMMEDIATE V_CAP_COD_PRO INTO V_COD_PRO USING P_COD_PRO;
EXECUTE IMMEDIATE V_CAP_PRECO_PRO INTO V_PRECO_PRO USING P_COD_PRO;


V_SQL_DESC_10 := 'SELECT PORCENTAGEM_DES FROM VAUCHER WHERE COD_VAU = ''NHZ3456KFSD''';
V_SQL_DESC_20 := 'SELECT PORCENTAGEM_DES FROM VAUCHER WHERE COD_VAU = ''FHJ9078TGSL''';
V_SQL_DESC_30 := 'SELECT PORCENTAGEM_DES FROM VAUCHER WHERE COD_VAU = ''QWH7856PMNG''';
V_SQL_DESC_40 := 'SELECT PORCENTAGEM_DES FROM VAUCHER WHERE COD_VAU = ''JKB4539FFEW''';
V_SQL_DESC_50 := 'SELECT PORCENTAGEM_DES FROM VAUCHER WHERE COD_VAU = ''LDR7856QPZF''';

EXECUTE IMMEDIATE V_SQL_DESC_10 INTO V_DESC_10;
EXECUTE IMMEDIATE V_SQL_DESC_20 INTO V_DESC_20;
EXECUTE IMMEDIATE V_SQL_DESC_30 INTO V_DESC_30;
EXECUTE IMMEDIATE V_SQL_DESC_40 INTO V_DESC_40;
EXECUTE IMMEDIATE V_SQL_DESC_50 INTO V_DESC_50;



  INSERT /*+append*/ INTO VENDAS VALUES (V_COD_LOJ,V_CPF_CLI,V_COD_PRO,V_PRECO_PRO,P_COD_VAUCHER);
COMMIT; 
  DBMS_OUTPUT.PUT_LINE(' VENDA FEITA COM SUCESSO !!! ');
  
 

/*INICIANDO MINHAS CONDICOES*/
 IF P_COD_VAUCHER = 'NHZ3456KFSD' THEN 
  UPDATE VENDAS 
     SET TOTAL_COMPRA = TOTAL_COMPRA - TOTAL_COMPRA * V_DESC_10
   WHERE COD_CLI = V_CPF_CLI;
 DBMS_OUTPUT.PUT_LINE(' DESCONTO DE 10% NA COMPRA');
COMMIT;

ELSIF P_COD_VAUCHER = 'FHJ9078TGSL' THEN
   UPDATE VENDAS 
     SET TOTAL_COMPRA = TOTAL_COMPRA - TOTAL_COMPRA * V_DESC_20
   WHERE COD_CLI = V_CPF_CLI;
 DBMS_OUTPUT.PUT_LINE(' DESCONTO DE 20% NA COMPRA');
COMMIT;

ELSIF P_COD_VAUCHER = 'QWH7856PMNG' THEN
   UPDATE VENDAS 
     SET TOTAL_COMPRA = TOTAL_COMPRA - TOTAL_COMPRA * V_DESC_30
   WHERE COD_CLI = V_CPF_CLI;
 DBMS_OUTPUT.PUT_LINE(' DESCONTO DE 30% NA COMPRA');
COMMIT;

ELSIF P_COD_VAUCHER = 'JKB4539FFEW' THEN
   UPDATE VENDAS 
     SET TOTAL_COMPRA = TOTAL_COMPRA - TOTAL_COMPRA * V_DESC_40
   WHERE COD_CLI = V_CPF_CLI;
 DBMS_OUTPUT.PUT_LINE(' DESCONTO DE 40% NA COMPRA');
COMMIT;

ELSIF P_COD_VAUCHER = 'LDR7856QPZF' THEN
   UPDATE VENDAS 
     SET TOTAL_COMPRA = TOTAL_COMPRA - TOTAL_COMPRA * V_DESC_50
   WHERE COD_CLI = V_CPF_CLI;
 DBMS_OUTPUT.PUT_LINE(' DESCONTO DE 50% NA COMPRA');
COMMIT;


ELSIF P_COD_VAUCHER != 'NHZ3456KFSD' 
      OR 
      P_COD_VAUCHER != 'FHJ9078TGSL'
      OR
      P_COD_VAUCHER != 'QWH7856PMNG'
      OR 
      P_COD_VAUCHER != 'JKB4539FFEW'
      OR 
      P_COD_VAUCHER != 'LDR7856QPZF' THEN 
RAISE V_ERRO;

ELSE
 DBMS_OUTPUT.PUT_LINE(' ESTE CLIENTE NÃƒO OBTEVE O VAUCHAR');
END IF;

 EXCEPTION WHEN DUP_VAL_ON_INDEX THEN 
   DBMS_OUTPUT.PUT_LINE('ERRO ID OU CPF IGUAIS');
 WHEN V_ERRO THEN 
RAISE_APPLICATION_ERROR(-20000, 'ERRO: CODIGO DO VAUCHER DIGITADO ERRADO, OU NAO CONSTA NA BASE DA DADOS');
 WHEN OTHERS THEN 
  DBMS_OUTPUT.PUT_LINE('ERRO INESPERADO ');
  DBMS_OUTPUT.PUT_LINE('VALORES DE ALGUMS PARAMETRO NAO ESTAO CORRETOS !!!');
END SP_VENDAS;
END PKG_VOUCHER_DESC;









/*CHAMADA DA PROCEDURE SP_VENDAS */
BEGIN 
  SP_VENDAS (P_COD_LOJ     => &DIGITE_COD_LOJISTA,
             P_CPF_CLI     => &DIGITE_CPF_DO_CLIENTE,
             P_COD_PRO     => &DIGITE_COD_PRO,
             P_COD_VAUCHER => '&DIGITE_CODIGO_VAUCHER');
END;  
  
  


